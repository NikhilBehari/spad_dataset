name: hardware
services:
  dev:
    image: "camera/${COMPOSE_PROJECT_NAME}:dev"
    hostname: '${COMPOSE_PROJECT_NAME}'
    container_name: '${COMPOSE_PROJECT_NAME}-dev'
    build:
      context: "./"
      network: "host"
      dockerfile: "./docker/dev.dockerfile"
      args:
        PROJECT: "${COMPOSE_PROJECT_NAME}"
        IMAGE_BASE: "arm64v8/debian"
        IMAGE_TAG: "bookworm-slim"
        USER_GROUPS: "dialout video"
        PIP_REQUIREMENTS: "poetry"
        APT_DEPENDENCIES: |
          git-core 
          libgl1
          libglib2.0-dev
          udev
          x11-apps
          x11-xserver-utils
          qtbase5-dev
          qtchooser
          qt5-qmake
          qtbase5-dev-tools
        CONDA_PACKAGES: "python=3.12 gcc=12.1.0"
        CONDA_CHANNELS: "conda-forge"
    volumes:
      - './:/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}'
      - '/dev:/dev' # TODO: I don't like this
      - '/tmp/.X11-unix:/tmp/.X11-unix'
    ports:
      - "127.0.0.1:8080-8099:8080"
    environment:
      DISPLAY: '${DISPLAY:-vnc:0.0}'
    working_dir: '/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}'
    tty: true
    privileged: True # TODO: I don't like this
  vnc:
    image: "camera/${COMPOSE_PROJECT_NAME}:vnc"
    hostname: "${COMPOSE_PROJECT_NAME}-vnc"
    container_name: "${COMPOSE_PROJECT_NAME}-vnc"
    build:
      context: "./"
      dockerfile: "./docker/vnc.dockerfile"
      network: "host"
      args:
        VNC_PASSWORD: "${COMPOSE_PROJECT_NAME}"
    ports:
      - "127.0.0.1:8080-8099:8080"
      - "127.0.0.1:5900-5999:5900"
networks:
  default:
    name: "${COMPOSE_PROJECT_NAME}"
